{"ast":null,"code":"export default function todoReducer(lists, action) {\n  switch (action.type) {\n    case 'CREATE_TODO':\n      {\n        const {\n          title,\n          description,\n          dateCreated,\n          complete\n        } = action;\n        return [...lists, {\n          title,\n          description,\n          dateCreated,\n          complete\n        }];\n      }\n    case 'TOGGLE_TODO':\n      {\n        return lists.map(task => {\n          if (task.id === action.id) {\n            return {\n              ...task,\n              complete: !task.complete,\n              dateCompleted: task.complete ? null : new Date()\n            };\n          } else {\n            return task;\n          }\n        });\n      }\n    case 'DELETE_TODO':\n      {\n        return lists.filter(task => task.id !== action.id);\n      }\n    default:\n      {\n        throw Error('Unknown action: ' + action.type);\n      }\n  }\n}","map":{"version":3,"names":["todoReducer","lists","action","type","title","description","dateCreated","complete","map","task","id","dateCompleted","Date","filter","Error"],"sources":["/Users/yiyuan/Desktop/depaul/csc436/csc436-lab2/src/reducer.js"],"sourcesContent":["export default function todoReducer(lists, action) {\n    switch (action.type) {\n        case 'CREATE_TODO': {\n            const { title, description, dateCreated, complete } = action\n            return [\n                ...lists,\n                {\n                    title,\n                    description,\n                    dateCreated,\n                    complete,\n                },\n            ]\n        }\n        case 'TOGGLE_TODO': {\n            return lists.map((task) => {\n                if (task.id === action.id) {\n                    return {\n                        ...task,\n                        complete: !task.complete,\n                        dateCompleted: task.complete ? null : new Date(),\n                    }\n                } else {\n                    return task\n                }\n            })\n        }\n        case 'DELETE_TODO': {\n            return lists.filter((task) => task.id !== action.id)\n        }\n        default: {\n            throw Error('Unknown action: ' + action.type)\n        }\n    }\n}\n"],"mappings":"AAAA,eAAe,SAASA,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MAAE;QAChB,MAAM;UAAEC,KAAK;UAAEC,WAAW;UAAEC,WAAW;UAAEC;QAAS,CAAC,GAAGL,MAAM;QAC5D,OAAO,CACH,GAAGD,KAAK,EACR;UACIG,KAAK;UACLC,WAAW;UACXC,WAAW;UACXC;QACJ,CAAC,CACJ;MACL;IACA,KAAK,aAAa;MAAE;QAChB,OAAON,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAK;UACvB,IAAIA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACQ,EAAE,EAAE;YACvB,OAAO;cACH,GAAGD,IAAI;cACPF,QAAQ,EAAE,CAACE,IAAI,CAACF,QAAQ;cACxBI,aAAa,EAAEF,IAAI,CAACF,QAAQ,GAAG,IAAI,GAAG,IAAIK,IAAI,CAAC;YACnD,CAAC;UACL,CAAC,MAAM;YACH,OAAOH,IAAI;UACf;QACJ,CAAC,CAAC;MACN;IACA,KAAK,aAAa;MAAE;QAChB,OAAOR,KAAK,CAACY,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACQ,EAAE,CAAC;MACxD;IACA;MAAS;QACL,MAAMI,KAAK,CAAC,kBAAkB,GAAGZ,MAAM,CAACC,IAAI,CAAC;MACjD;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}